import jenkins.*;
import jenkins.model.*;
import hudson.*;
import hudson.model.*;

import com.cloudbees.plugins.credentials.domains.Domain;
import com.cloudbees.plugins.credentials.CredentialsScope;

domain = Domain.global()
store = Jenkins.instance.getExtensionList(
  'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
)[0].getStore()

credsNew = new {userPrivateKey}(
  CredentialsScope.GLOBAL, '{credentialsId}',
  '{userName}',
  new {privateKeySource}('''{sshKeyText}'''),
  '{sshKeyPassphrase}',
  '{description}'
)

creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
  {userPrivateKey}.class, Jenkins.instance
);
updated = false;

for (credsCurr in creds) {
  // Comparison does not compare passwords but identity.
  if (credsNew == credsCurr) {
    store.removeCredentials(domain, credsCurr);
    ret = store.addCredentials(domain, credsNew)
    updated = true;
    println('OVERWRITTEN');
    break;
  }
}

if (!updated) {
  ret = store.addCredentials(domain, credsNew)
  if (ret) {
    println('CREATED');
  } else {
    println('FAILED');
  }
}
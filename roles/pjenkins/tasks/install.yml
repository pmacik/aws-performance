---
- name: Create Jenkins SSH credentials
  jenkins_credentials:
    jenkins_url: '{{jenkins_master_url}}'
    username: '{{jenkins_admin_username}}'
    password: '{{jenkins_admin_password}}'
    kwargs:
      name: '{{jenkins_slave_credentials_id}}'
      cls: '{{ssh_credentials_package}}.BasicSSHUserPrivateKey'
      keyCls: '{{ssh_credentials_package}}.BasicSSHUserPrivateKey.DirectEntryPrivateKeySource'
      keyFile: '{{item}}'
      userName: '{{jenkins_user_name}}'
      passphrase: ''
      description: 'EC2 VMs'
  with_file: ~/.ssh/ec2.jenkins
  when: not ansible_check_mode
  no_log: true
  tags: [pjenkins, ssh-key]

- name: Check previous node
  jenkins_api:
    jenkins_url: '{{jenkins_master_url}}'
    username: '{{jenkins_admin_username}}'
    password: '{{jenkins_admin_password}}'
    command: node_exists
    args:
      - 'ec2-perf-{{item.ami_launch_index}}'
  register: ec2_existed_nodes
  when: 
    - not ansible_check_mode
    - item.public_dns_name is defined
  no_log: true
  with_items: '{{ec2.tagged_instances}}'
  tags: [pjenkins, current-vm]

- name: Delete previous node
  jenkins_api:
    jenkins_url: '{{jenkins_master_url}}'
    username: '{{jenkins_admin_username}}'
    password: '{{jenkins_admin_password}}'
    command: delete_node
    args:
      - 'ec2-perf-{{slave.item.ami_launch_index}}'
  when:
    - slave.node_exists
  no_log: true  
  with_items: '{{ec2_existed_nodes.results}}'
  loop_control:
    loop_var: slave
  tags: [pjenkins, delete-vm]

- name: Create Jenkins node
  jenkins_api:
    jenkins_url: '{{jenkins_master_url}}'
    username: '{{jenkins_admin_username}}'
    password: '{{jenkins_admin_password}}'
    command: create_node
    args:
      - 'ec2-perf-{{slave.item.ami_launch_index}}'
    kwargs:
      numExecutors: '{{jenkins_slave_executors}}'
      nodeDescription: '{{jenkins_slave_description}}'
      remoteFS: '{{jenkins_user_home}}'
      labels: '{{jenkins_slave_labels}}'
      launcher: 'hudson.plugins.sshslaves.SSHLauncher'
      launcher_params:
        port: '{{jenkins_slave_port}}'
        username: '{{jenkins_user_name}}'
        credentialsId: '{{jenkins_slave_credentials_id}}'
        host: '{{slave.item.public_dns_name}}'
  when:
    - slave.item.public_dns_name is defined
  no_log: false
  with_items: '{{ec2_existed_nodes.results}}'
  loop_control:
    loop_var: slave
  tags: [pjenkins, create-vm]